shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

// https://www.pcjs.org/machines/dec/vt100/rom/
const lowp int char_rom[2048] = lowp int[2048] (
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000000 ................
  0x10,0x38,0x7C,0xFE,0x7C,0x38,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000010 .8|.|8..........
  0x92,0x44,0x92,0x44,0x92,0x44,0x92,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000020 .D.D.D..........
  0x88,0x88,0xF8,0x88,0x88,0x3E,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000030 ................
  0xF0,0x80,0xE0,0x80,0x9E,0x10,0x1C,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000040 ................
  0x78,0x80,0x80,0x78,0x3C,0x22,0x3C,0x22,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000050 x..x."."".......
  0x80,0x80,0x80,0xF8,0x3E,0x20,0x3C,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000060 ..... .  .......
  0x38,0x44,0x44,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000070 8DD8............
  0x00,0x10,0x10,0xFE,0x10,0x10,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000080 ................
  0x88,0xC8,0xA8,0x98,0x88,0x20,0x20,0x20,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000090 .....   ........
  0x88,0x88,0x50,0x20,0x3E,0x08,0x08,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000000A0 ..P ............
  0x10,0x10,0x10,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x000000B0 ................
  0x00,0x00,0x00,0xF0,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000000C0 ................
  0x00,0x00,0x00,0x1F,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000000D0 ................
  0x10,0x10,0x10,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x000000E0 ................
  0x10,0x10,0x10,0xFF,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x000000F0 ................
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF, // 0x00000100 ................
  0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000110 ................
  0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000120 ................
  0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000130 ................
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000140 ................
  0x10,0x10,0x10,0x1F,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x00000150 ................
  0x10,0x10,0x10,0xF0,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x00000160 ................
  0x10,0x10,0x10,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x00000170 ................
  0x00,0x00,0x00,0xFF,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000180 ................
  0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10, // 0x00000190 ................
  0x02,0x08,0x20,0x80,0x20,0x08,0x02,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001A0 .. . ...........
  0x80,0x20,0x08,0x02,0x08,0x20,0x80,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001B0 . ... ..........
  0x00,0x00,0xFE,0x24,0x24,0x24,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001C0 ...$$$D.........
  0x02,0x04,0xFE,0x10,0xFE,0x40,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001D0 .....@..........
  0x1C,0x22,0x20,0xF8,0x20,0x78,0xA6,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001E0 ." . x.@........
  0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000001F0 ................
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000200 ................
  0x10,0x10,0x10,0x10,0x10,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000210 ................
  0x24,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000220 $$$.............
  0x48,0x48,0xFC,0x48,0xFC,0x48,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000230 HH.H.HH.........
  0x10,0x7C,0x90,0x7C,0x12,0x7C,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000240 .|.|.|..........
  0xC2,0xC4,0x08,0x10,0x20,0x46,0x86,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000250 .... F..........
  0x70,0x88,0x88,0x70,0x8A,0x84,0x7A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000260 p..p..z.........
  0x18,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000270 .. .............
  0x08,0x10,0x20,0x20,0x20,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000280 ..   ...........
  0x20,0x10,0x08,0x08,0x08,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000290  ..... .........
  0x00,0x44,0x28,0xFE,0x28,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002A0 .D(.(D..........
  0x00,0x10,0x10,0xFE,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002B0 ................
  0x00,0x00,0x00,0x00,0x00,0x30,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002C0 .....0 @........
  0x00,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002D0 ................
  0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002E0 .....00.........
  0x02,0x04,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000002F0 .... @..........
  0x38,0x44,0x82,0x82,0x82,0x44,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000300 8D...D8.........
  0x10,0x30,0x50,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000310 .0P...|.........
  0x78,0x84,0x02,0x1C,0x60,0x80,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000320 x...`...........
  0xFE,0x04,0x08,0x1C,0x02,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000330 ......|.........
  0x08,0x18,0x28,0x48,0xFE,0x08,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000340 ..(H............
  0xFE,0x80,0xBC,0xC2,0x02,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000350 ......|.........
  0x3C,0x42,0x80,0xBC,0xC2,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000360 .B...B..........
  0xFE,0x02,0x04,0x08,0x10,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000370 ..... @.........
  0x7C,0x82,0x82,0x7C,0x82,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000380 |..|..|.........
  0x78,0x84,0x86,0x7A,0x02,0x84,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000390 x..z..x.........
  0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003A0 .00..00.........
  0x00,0x30,0x30,0x00,0x00,0x30,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003B0 .00..0 @........
  0x02,0x08,0x20,0x80,0x20,0x08,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003C0 .. . ...........
  0x00,0x00,0xFE,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003D0 ................
  0x80,0x20,0x08,0x02,0x08,0x20,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003E0 . ... ..........
  0x7C,0x82,0x0C,0x10,0x10,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000003F0 |...............
  0x7C,0x82,0x8A,0x92,0x9C,0x80,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000400 |.....|.........
  0x10,0x28,0x44,0x82,0xFE,0x82,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000410 .(D.............
  0xFC,0x42,0x42,0x7C,0x42,0x42,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000420 .BB|BB..........
  0x3C,0x42,0x80,0x80,0x80,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000430 .B...B..........
  0xF8,0x44,0x42,0x42,0x42,0x44,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000440 .DBBBD..........
  0xFE,0x80,0x80,0xF8,0x80,0x80,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000450 ................
  0xFE,0x80,0x80,0xF8,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000460 ................
  0x3C,0x42,0x80,0x80,0x8E,0x42,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000470 .B...B..........
  0x82,0x82,0x82,0xFE,0x82,0x82,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000480 ................
  0x7C,0x10,0x10,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000490 |.....|.........
  0x0E,0x04,0x04,0x04,0x04,0x84,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004A0 ......x.........
  0x82,0x8C,0xB0,0xC0,0xB0,0x8C,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004B0 ................
  0x80,0x80,0x80,0x80,0x80,0x80,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004C0 ................
  0x82,0xC6,0xAA,0x92,0x82,0x82,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004D0 ................
  0x82,0xC2,0xA2,0x92,0x8A,0x86,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004E0 ................
  0x7C,0x82,0x82,0x82,0x82,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000004F0 |.....|.........
  0xFC,0x82,0x82,0xFC,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000500 ................
  0x7C,0x82,0x82,0x82,0x8A,0x84,0x7A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000510 |.....z.........
  0xFC,0x82,0x82,0xFC,0x88,0x84,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000520 ................
  0x7C,0x82,0x80,0x7C,0x02,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000530 |..|..|.........
  0xFE,0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000540 ................
  0x82,0x82,0x82,0x82,0x82,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000550 ......|.........
  0x82,0x82,0x44,0x44,0x28,0x28,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000560 ..DD((..........
  0x82,0x82,0x82,0x92,0x92,0xAA,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000570 ......D.........
  0x82,0x44,0x28,0x10,0x28,0x44,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000580 .D(.(D..........
  0x82,0x44,0x28,0x10,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000590 .D(.............
  0xFE,0x04,0x08,0x10,0x20,0x40,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005A0 .... @..........
  0x3C,0x20,0x20,0x20,0x20,0x20,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005B0 .     ..........
  0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005C0 .@ .............
  0x78,0x08,0x08,0x08,0x08,0x08,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005D0 x.....x.........
  0x10,0x28,0x44,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005E0 .(D.............
  0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000005F0 ................
  0x30,0x10,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000600 0...............
  0x00,0x00,0x7C,0x02,0x7E,0x82,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000610 ..|.~.~.........
  0x80,0x80,0xBC,0xC2,0x82,0xC2,0xBC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000620 ................
  0x00,0x00,0x3C,0x42,0x80,0x40,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000630 ...B.@..........
  0x02,0x02,0x7A,0x86,0x82,0x86,0x7A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000640 ..z...z.........
  0x00,0x00,0x7C,0x82,0xFE,0x80,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000650 ..|...|.........
  0x1C,0x22,0x20,0xF8,0x20,0x20,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000660 ." .   .........
  0x00,0x02,0x7A,0x84,0x84,0x7C,0x04,0x84,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000670 ..z..|..x.......
  0x80,0x80,0xBC,0xC2,0x82,0x82,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000680 ................
  0x10,0x00,0x30,0x10,0x10,0x10,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000690 ..0...|.........
  0x04,0x00,0x04,0x04,0x04,0x04,0x84,0x84,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006A0 ........x.......
  0x80,0x80,0x88,0x90,0xE0,0x88,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006B0 ................
  0x30,0x10,0x10,0x10,0x10,0x10,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006C0 0.....8.........
  0x00,0x00,0xC4,0xAA,0x92,0x92,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006D0 ................
  0x00,0x00,0xBC,0xC2,0x82,0x82,0x82,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006E0 ................
  0x00,0x00,0x7C,0x82,0x82,0x82,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000006F0 ..|...|.........
  0x00,0x00,0xBC,0xC2,0xC2,0xBC,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000700 ................
  0x00,0x00,0x7A,0x86,0x86,0x7A,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000710 ..z..z..........
  0x00,0x00,0x9C,0x62,0x40,0x40,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000720 ...b@@@.........
  0x00,0x00,0x7C,0x80,0x7C,0x02,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000730 ..|.|...........
  0x20,0x20,0xF8,0x20,0x20,0x24,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000740   .  $..........
  0x00,0x00,0x84,0x84,0x84,0x84,0x7A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000750 ......z.........
  0x00,0x00,0x82,0x82,0x44,0x28,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000760 ....D(..........
  0x00,0x00,0x82,0x82,0x92,0xAA,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000770 ......D.........
  0x00,0x00,0x84,0x48,0x30,0x48,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000780 ...H0H..........
  0x00,0x00,0x84,0x84,0x8C,0x74,0x04,0x84,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x00000790 .....t..x.......
  0x00,0x00,0xFE,0x04,0x18,0x20,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000007A0 ..... ..........
  0x0E,0x10,0x10,0x60,0x10,0x10,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000007B0 ...`............
  0x10,0x10,0x10,0x00,0x00,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000007C0 ................
  0xE0,0x10,0x10,0x0C,0x10,0x10,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000007D0 ................
  0x62,0x92,0x8C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // 0x000007E0 b...............
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00); // 0x000007F0 ................

/**
 * Parameter "ram" is a PackedInt32Array with maximum size of 1920 elements
 * which serves as the text buffer for the terminal display. Store ASCII
 * characters in "ram" to have them displayed by the shader. Additional bits
 * are used for modifying text appearance:
 * 0x0100 bitmask for BOLD characters
 * 0x0200 bitmask for LOWINTENSITY characters
 * 0x0400 bitmask for UNDERLINEd characters
 * 0x0800 bitmask for BLINKing characters
 * 0x1000 bitmask for REVERSEd characters
 * 0x2000 bitmask for INVISIBLE characters
 */
uniform int ram[1920];  // PackedInt32Array'

/**
 * Set parameter "cols" to the column width of the terminal display (default 80).
 * Product of cols and rows may not exceed 1920.
 */
uniform int cols = 80;	// screen width in chars

/**
 * Set parameter "rows" to the row height of the terminal display (default 24)
 * Product of cols and rows may not exceed 1920.
 */
uniform int rows = 24;	// screen height in chars

/**
 * Set parameter pixel_size to the width, height of a pixel where
 * (1.0, 1.0) would be full size, (0.5, 0.5) half, etc.
 */
uniform vec2 pixel_size = vec2(0.7,0.7);  

/**
 * Set parameter border_size to the width, height of a pixel border where
 * (0.0, 0.0) would be no border , (0.1, 0.1) would be a 1/10 size strip
 * of black around each pixel.  
 * requires that border_size * 2 + pixel_size <= vec2(1.0, 1.0)
 */
uniform vec2 border_size = vec2(0.1, 0.1);  

/**
 * Set emission energy when ON.
 */
uniform float emission_energy = 1.0;

/**
 * Set intensity of "off" pixel (0 -> 1.0) 
 */
uniform float off_intensity = 0.0;

/**
 * Specular setting.
 */
uniform float specular = 0.0;

/**
 * Set parameter "cursor_position" to a column, row position.
 * Position (1, 1) is the extreme upper left position on the screen.
 */
uniform ivec2 cursor_position = ivec2(1,1);	// col, row

/**
 * Set the visibility of cursor (on=visible, off=false)
 */
uniform bool cursor_visible = true;

/**
 * Set state of cursor (on=true, off=false)
 */
uniform bool cursor_state = true;

/**
 * Set state of blink modifier (on=true, off=false)
 */
uniform bool blink_state;

/**
 * Set state of display power (on=true, off=false)
 */
uniform bool display_power;



void vertex() {
	// Called for every vertex the material is visible on.
}

const int BOLD = 0x0100;
const int LOWINTENSITY = 0x0200;
const int UNDERLINE = 0x0400;
const int BLINK = 0x0800;
const int REVERSE = 0x1000;
const int INVISIBLE = 0x2000;

const int CHARW = 10;	// char width in pixels
const int CHARH = 10;	// char height in pixels

const vec3 default_color = vec3(0.906, 0.375, 0.0);

float sub_pixel_intensity(float pos, float border, float size) {
	// return pos;
	if (pos < border) {
		return 0.0;
	}
	if (pos < 0.5 - size/2.0) {
		return sqrt(2.0*(pos - border)/(1.0 - size - 2.0 * border));
	}
	if (pos < 0.5 + size/2.0) {
		return 1.0;
	}
	if (pos < 1.0 - border) {
		return sqrt(2.0*(pos + border - 1.0)/(2.0 * border + size - 1.0));
	}
	return 0.0;
}

float pixel_intensity(vec2 uv, ivec2 res, int col, int row, int char) {
	vec2 screen_pix_coord = uv * vec2(res);
	int pix_column = int(screen_pix_coord.x) - col*CHARW;
	int pix_row = int(screen_pix_coord.y) - row*CHARH;
	int cellrow = char_rom[(char & 0x07f) * 16 + pix_row] << 2; // two blank bits padding on the right
	bool cursoron = col + 1 == cursor_position.x && 
		row + 1 == cursor_position.y && 
		cursor_state && 
		cursor_visible;
	bool pixel_state = false;
	if ((cellrow & (0x0200 >> pix_column)) != 0 || cursoron) {pixel_state = true;}
	if ((char & REVERSE) != 0) {pixel_state = !pixel_state;}
	if (((char & BLINK) != 0) && !blink_state) {pixel_state = false;}
	if ((char & INVISIBLE) != 0) {pixel_state = false;}
	if (pix_row == 8 && ((char & UNDERLINE) !=0)) {pixel_state = !pixel_state;}
	vec2 sub_pixel_coord = fract(screen_pix_coord);
	float pixel_intensity = sqrt(
		sub_pixel_intensity(sub_pixel_coord.x, border_size.x, pixel_size.x) *
		sub_pixel_intensity(sub_pixel_coord.y, border_size.y, pixel_size.y)
		);
	if (pixel_state == true) {
		return pixel_intensity;
	}
	return pixel_intensity * off_intensity;
}

void fragment() {
	// Called for every pixel the material is visible on.
	ivec2 res = ivec2(cols*CHARW, rows*CHARH);
	//int xres = cols*CHARW;	// screen pixel width
	//int yres = rows*CHARH;	// screen pixel height
	// Called for every pixel the material is visible on.
	// COLOR = vec4(0.1, 0.1, 0.1, 1.0);
	int col = int(trunc(UV.x * float(cols)));
	int row = int(trunc(UV.y * float(rows)));
	int char = ram[col + row*cols];		// character from video ram
	vec3 on_color = default_color;
	if ((char & LOWINTENSITY) != 0) {
		on_color = default_color * 0.9;
	} else if ((char & BOLD) != 0) {
		on_color = default_color * 1.2;
	}

	float intensity = pixel_intensity(UV, res, col, row, char);
	if (!display_power) {
		intensity = 0.0;
	}
	EMISSION = on_color * intensity * emission_energy;
	ALBEDO = vec3(0.0);
	SPECULAR = specular;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
